I" #<p>So my first week of <a href="https://www.codaisseur.com/">Codaisseurâ€™s academy/bootcamp</a> was a great success! I think the time spent on the <a href="http://learn.co/">Learn.co Bootcamp Prep</a>Â has really paid off and Iâ€™d definitely recommend it to anyone thinking about a bootcamp or about to embark on one.</p>

<p>The week started last Sunday and ran through until Friday evening. After a lovely day in Utrecht on the Saturday followed byÂ taking it very easy at a friendâ€™s birthday party on the Saturday evening, bright-eyed and bushy tailed, I turned up at the TQ building for 9.30am.</p>

<p>After a brief induction session (donâ€™t be a dick, treat the building/people with respect), we were straight into HTML and CSS with Tijn. Now, Iâ€™ve got a fair amount of experience with HTML and CSS, so I was a bit concerned about what I would get out of the day, but luckily there was some interesting stuff to get stuck into.</p>

<!--more-->

<h2 id="emmet">Emmet</h2>
<p>Yeah, itâ€™s not just the main character from the Lego Movie, but itâ€™s also an awesome tool for writing HTML. Essentially, you write an expression, press tab and it expands it all into full HTML tags.</p>

<p>With Emmet, you can write something like <code class="highlighter-rouge">(div.row&gt;div.col-md-6+div.col-md-3)*4</code>Â and it will expand into 4 divs with the class <code class="highlighter-rouge">row</code>, each with 2 child divs, the first with the class <code class="highlighter-rouge">col-md-9</code>Â and the other with <code class="highlighter-rouge">col-md-3</code>. The &gt; indicates a child tag, while the + indicates siblings. This was a really simple example. You can also add an â€˜idâ€™ to each tag using the <code class="highlighter-rouge">#</code>Â symbol and the name of the id.</p>

<p>So, you write some big long expression, press tab and it all expands into some lovely HTML. On top of that, your cursor appears in the first position you need to start providing content in, and each press of the tab key jumps forward to the next position to start writing stuff. Itâ€™s very cool and thereâ€™s definitely room to be more efficient with writing your HTML like this.</p>

<p>The other really awesome thing I got out of Sunday was working with CSS flexbox. I feel like â€˜the internetâ€™ can sometimes be a bit down about flexbox. â€˜Ooh, can you use flexbox, what about IE9 support?â€™ etc. But you can use it on <a href="http://caniuse.com/#feat=flexbox">97% of the browsers out there in the wild</a>. So, just use it. Itâ€™s a higher percentage than the css3 <code class="highlighter-rouge">border-radius</code>Â attribute.</p>

<p>So, what do we do with flexbox? You apply the attribute <code class="highlighter-rouge">display:flex</code>Â to a parent element and it will make all the children flexy. Itâ€™s awesome and it makes it a dream to do things like justify your content and centering things in divs etc. I can highly recommend it.</p>

<p>Monday to Wednesday were spent working with Ruby on the command line. I have mixed feelings about it to be honest. I found it really useful creating classes in Ruby to take do some object-oriented programming, and I think it lays a good foundation for working with Rails (but it can be a little tiresome when I really just wanna get started making some web apps!).</p>

<h2 id="ruby-on-rails">Ruby on Rails</h2>
<p>Yes. Thursday brought us Ruby on Rails, and it is quite simply magical. Itâ€™s really, really smart, and took very little time to get up and running making associations between classes and creating my <a href="https://github.com/leefreemanxyz/valleys-of-dinosaurs">Valley of Dinosaurs</a> and <a href="https://github.com/leefreemanxyz/cities-of-monsters">Cities of Monsters</a> apps.</p>

<p>This also involved our first introduction the MVC design pattern. Obviously there are variants, but this pattern is very popular, so itâ€™s really important to get familiar with it.</p>

<p>If youâ€™re just getting started with Rails, the our teacher Miriam really drilled into us to think:</p>

<ul>
  <li>Router</li>
  <li>Controller</li>
  <li>Model (if you need it)</li>
  <li>View</li>
</ul>

<p>So, what route is being called? Now, think about the controller and action youâ€™re calling. Are you asking your model to speak to the database? Now, how is that being displayed in your view? Breaking it down like this and working through the flow of data and what instructions youâ€™re giving should really make it clear when youâ€™re trying to make heads or tails of your web app. Failing that, just read the Rails error messages and just develop by fixing what it tells you.</p>

<h2 id="pair-programming">Pair programming</h2>
<p>Wow, so Friday was the final day of Week 1, and we were working in groups to implement what we had learned that week. One of the main experiences I really wanted to get out of the course was working in groups. I imagine itâ€™s a problem for many self-taught developers â€“ you work alone and there is no real judge of the quality of your code. I mean, sure, you can submit it to the internet, but I think it takes a lot of bravery to put yourself out there and request feedback.</p>

<p>So part of our task was to share laptops and pair program, and I have to say, itâ€™s a completely novel experience for me, and I canâ€™t help but wonder what this sort of practice would involve in my previous career (and yes, it feels good to write that). Â What other careers might it work (or not work) in?</p>

<p>As an editor, would it be possible to â€˜pair editâ€™? Is there anyÂ logistical reason preventing it?Â I always felt that editing was a very solitary experience. Lots of responsibility, lots of <del>fighting</del> discussion with your author, but I rarely felt supported as part of a team.</p>

<p>In trying out pair programming, I thought it was an interesting experiment and itâ€™s probably something that you get used to as you do it more and try it with other people. Our teachers discussed today using the second person to essentially be a god of documentation/Stack Overflow/Google and, while this is very different from the task we were set (I felt the instruction to only work from one laptop between two was fairly explicit), it perhaps has some extra potential to work.</p>

<p>While we were pair programming though, we were also working simultaneously with another pair on our project, which leads me toâ€¦</p>

<h2 id="github">GitHub</h2>
<p>GitHub is amazing.Â In myÂ <em>previous career</em> we usedÂ an absolutely god-awful bit of software to use called Documentum. It only worked in Internet Explorer and required Java to work. It completely sucked. Luckily my project didnâ€™t involve using it that much becauseÂ <em>reasons</em>.</p>

<p>And now here I am using GitHub. I talked about it in my previous post. Branch it, add it, commit it, push it. Amazing. But now weâ€™ve got other people using it too and itâ€™s really awesome to see how to deal with merge conflicts and pull requests really works. It really emphasized the importance of making small branches so that submitted code is easier to review (and I know that Iâ€™d rather have a quick look at 3 lines of submitted code than 300).</p>

<p>So, using what we had learned the day before, we created our Batches of Students app, where you could see former Codaisseur students by according to the batch they were part of. This let us explore parent and child relationships, as well as adding <code class="highlighter-rouge">references</code>, <code class="highlighter-rouge">has_many</code> and <code class="highlighter-rouge">belongs_to</code> to our models.</p>

<p>Because I found working on GitHub really valuable and I think we could all do with some more experience submitting pull requests and working with merge conflicts, I opened a few issues on GitHub for the team to work through when we find time to do so. While we are moving onto other projects, some of these issues only require a line of two or code, but I think there is more to gain out of the experiences here than merely writing those one or two lines of code, so here we are. You can check out the <a href="https://github.com/anikaSchwing/codaisseur_connection">repository on GitHub</a>.</p>

<p>Iâ€™d intended to update this about once a week, and I hope I can keep to this sort of schedule, but I think the words come pretty easily for this, so we should be okay, even if this one is a little late. Weâ€™ll see.</p>

<p>Also, I know I just re-did the whole blog thing, but Iâ€™m very tempted to start over. My Chrome updated with CSS grid this morning, and I really want to try a real newspaper/magazine-like layout for my blog, because I think it would look really rad (also, I assume that anyone reading this will be a FireFox/Chrome user anyway). I can look at CSS Grid with Wordpress, but it may be a lot simpler to try it out with Jekyll anyway (especially given that my course focuses so much on Ruby/Rails anyway). Iâ€™ll see how busy I end up in the next fortnight and hopefully be make a decision on this. Weâ€™ll see, Iâ€™ll let you know.</p>
:ET